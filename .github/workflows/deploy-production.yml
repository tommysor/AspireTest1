name: deploy-pipeline

on:
  workflow_dispatch:

  # ONLY FOR TEST
  pull_request: 
    branches:
      - main

  push:
    branches:
      - main
    paths-ignore:
      - '*.md'
      - 'stryker-config.json'
      - 'LICENSE'
      - '.gitignore'
      - '.vscode/*'
      - '.devcontainer/*'

permissions:
  id-token: write
  contents: read

concurrency:
  group: "${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  basic-tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - run: dotnet workload restore
    - run: dotnet tool restore
    - run: dotnet test
    - run: dotnet stryker
    - uses: actions/upload-artifact@v4
      with:
        name: stryker-mutation-report
        path: StrykerOutput/**/mutation-report.html
        if-no-files-found: error
  
  deploy-acr:
    runs-on: ubuntu-latest
    env:
      RG_ACR: ${{ vars.RG_ACR }}
    outputs:
      containerRegistryUrl: ${{ steps.deployAcr.outputs.containerRegistryUrl }}
      managedIdentityId: ${{ steps.deployAcr.outputs.managedIdentityId }}
      managedIdentityClientId: ${{ steps.deployAcr.outputs.managedIdentityClientId }}

    steps:
    - uses: actions/checkout@v4
    - name: 'Az login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: deploy acr
      id: deployAcr
      env:
        deploymentName: ${{ env.RG_ACR }}-${{ env.DEPLOY_TIMESTAMP }}-${{ env.GITHUB_SHA_SHORT }}
      run: |
        echo "Deploying Container registry"
        echo "deploymentName: ${{ env.deploymentName }}"

        az group create --location norwayeast --name ${{ env.RG_ACR }}

        az bicep lint --file .platform/main.acr.bicep

        deployResult=$(az deployment group create \
          --mode Complete \
          --resource-group "${{ env.RG_ACR }}" \
          --name "${{ env.deploymentName }}" \
          --template-file ./.platform/main.acr.bicep \
          )

        echo "# Deploy result"
        echo $deployResult
        echo "# ---"
        
        echo "# setting outputs"
        
        # containerRegistryUrl
        containerRegistryUrl=$(echo $deployResult | jq --raw-output '.properties.outputs.containerRegistryUrl.value')
        echo "containerRegistryUrl=$containerRegistryUrl" >> $GITHUB_OUTPUT
        # managedIdentityId
        managedIdentityId=$(echo $deployResult | jq --raw-output '.properties.outputs.managedIdentityId.value')
        echo "managedIdentityId=$managedIdentityId" >> $GITHUB_OUTPUT
        # managedIdentityClientId
        managedIdentityClientId=$(echo $deployResult | jq --raw-output '.properties.outputs.managedIdentityClientId.value')
        echo "managedIdentityClientId=$managedIdentityClientId" >> $GITHUB_OUTPUT
        
        echo "# done"

  deploy-test:
    uses: ./.github/workflows/deploy.yml
    needs: deploy-acr
    with:
      environment: 'Test'
      containerRegistryUrl: ${{ needs.deploy-acr.outputs.containerRegistryUrl }}
      managedIdentityId: ${{ needs.deploy-acr.outputs.managedIdentityId }}
      managedIdentityClientId: ${{ needs.deploy-acr.outputs.managedIdentityClientId }}
    secrets: inherit

  acceptance-tests:
    runs-on: ubuntu-latest
    needs:
    - deploy-test
    - basic-tests
    env:
      SPESIFICATIONS_BASEADDRESS: ${{ needs.deploy-test.outputs.webfrontendUrl }}
    steps:
      - uses: actions/checkout@v4

      - name: Run acceptance tests
        run: |
          echo "SPESIFICATIONS_BASEADDRESS: ${{ env.SPESIFICATIONS_BASEADDRESS }}"

          pushd spesifications
          dotnet build
          pwsh Spesification/bin/Debug/net8.0/playwright.ps1 install --with-deps
          dotnet test
          popd

  deploy-production:
    uses: ./.github/workflows/deploy.yml
    needs: acceptance-tests
    with:
      environment: 'Production'
      containerRegistryUrl: ${{ needs.deploy-acr.outputs.containerRegistryUrl }}
      managedIdentityId: ${{ needs.deploy-acr.outputs.managedIdentityId }}
      managedIdentityClientId: ${{ needs.deploy-acr.outputs.managedIdentityClientId }}
    secrets: inherit
